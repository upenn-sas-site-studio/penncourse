<?php
/**
 * @file
 * PennCourse Module
 *
 * This module supports display of course data from the Penn Data Warehouse
 */


/**
* Display help and module information
* @param section which section of the site we're displaying help
* @return help text for section
*/
function penncourse_help($section='') {
  $output = '';

  switch ($section) {
    case "admin/help#penncourse":
      $output = '<p>' . t("Displays course information from the Penn Data Warehouse. Requires separate configuration of data synchronization tasks.") . '</p>';
      break;
  }

  return $output;
} // function onthisdate_help

function penncourse_views_api() {
  return array(
    'api' => 3,
  );
}

/* function penncourse_init() {
    ini_set('display_errors', 1);
    error_reporting(E_ALL);

    $entity_type = 'node';
    $field_name = 'field_pc_level';
    $bundle_name = 'pc_section';

    $info_config = field_info_field($field_name);
    $info_instance = field_info_instance($entity_type, $field_name, $bundle_name);
    unset($info_config['id']);
    unset($info_instance['id'], $info_instance['field_id']);
    include_once DRUPAL_ROOT . '/includes/utility.inc';
    $output = "field_create_field(" . drupal_var_export($info_config) . ");\n";
    $output .= "field_create_instance(" . drupal_var_export($info_instance) . ");";
    drupal_set_message("<textarea rows=30 style=\"width: 100%;\">" . $output . '</textarea>');
    // pcpm($field_data);
    // pcpm($instance_data);
} */ // function penncourse_init()

/**
* Valid permissions for this module
* @return array An array of valid permissions for the onthisdate module
*/
function penncourse_permission() {
  return array(
      'access penncourse content' => array(
          'title' => t('Access PennCourse Content'),
          'description' => t('Access basic module content.')
      ),
      'admin penncourse' => array(
          'title' => t('Administer PennCourse Module'),
          'description' => t('Access administrative tasks for this module.')
      ),
  );
} // function penncourse_perm()

/**
 * Implementation of hook_menu()
 */
function penncourse_menu() {
  $items['admin/settings/penncourse'] = array(
    'title' => 'PennCourse',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('penncourse_admin_settings'),
    'access arguments' => array('admin penncourse'),
    'description' => 'Change settings for the Penncourse module.',
    'file' => 'penncourse.admin.inc',
  );
  $items['pc/term/%'] = array(
    'title' => 'Courses',
    'page callback' => 'penncourse_course_list_term',
    'page arguments' => array(2),
    'access callback' => 'user_access',
    'access arguments' => array('access penncourse content'),
    'type' => MENU_CALLBACK,
    'file' => 'penncourse.pages.inc',
  );
  $items['pc/load/%'] = array(
    'title' => 'Loading Courses',
    'page callback' => 'penncourse_load_year',
    'page arguments' => array(2),
    'access callback' => 'user_access',
    'access arguments' => array('admin penncourse'),
    'type' => MENU_CALLBACK,
    'file' => 'penncourse.pages.inc',
  );
  $items['pc/term/%/subject/%/%'] = array(
    'title' => 'Courses',
    'page callback' => 'penncourse_course_list_term',
    'page arguments' => array(2, 4, 5),
    'access callback' => 'user_access',
    'access arguments' => array('access penncourse content'),
    'type' => MENU_CALLBACK,
    'file' => 'penncourse.pages.inc',
  );
  $items['pc/course/%/%'] = array(
    'title' => 'Course Details',
    'page callback' => 'penncourse_course_detail',
    'page arguments' => array(2, 3),
    'access callback' => 'user_access',
    'access arguments' => array('access penncourse content'),
    'type' => MENU_CALLBACK,
    'file' => 'penncourse.pages.inc',
  );
  return $items;
} // function penncourse_menu()

/**
 * Implementation of hook_cron
 */
function penncourse_cron() {
  module_load_include('inc', 'penncourse', 'penncourse.include');
  $subject_array = explode(' ', trim(variable_get('penncourse_subject_areas', '')));
  
  // process each subject area as set on the penncourse system settings form
  foreach ($subject_array as $subject) {
    penncourse_process_subj_area($subject);
  }
}

/**
 * Implements hook_node_info().
 *
 * We use hook_node_info() to define our node content type.
 */
/* function penncourse_node_info() {
    // We define the node type as an associative array.
    return array(
        'pc_course' => array(
            'name' => t('Course'),
            // 'base' tells Drupal the base string for hook functions.
            // This is often the module name; if base is set to 'mymodule',
            // Drupal would call mymodule_insert() or similar for node
            // hooks. In our case, the base is 'node_example'.
            'base' => 'penncourse',
            'description' => t('The Course content type is used by the Penncourse module to support display of course listing information.'),
            'title_label' => t('Title'),
            // We'll set the 'locked' attribute to TRUE, so users won't be
            // able to change the machine name of our content type.
            'locked' => TRUE,
        ),
        'pc_section' => array(
            'name' => t('Section'),
            'base' => 'penncourse',
            'description' => t('A content type for course section data. This data is intended to be loaded automatically from the data warehouse; however, this content type can be used to manually record course section data for those sites not configured for automatic load.'),
            'title_label' => t('Title'),
            // We'll set the 'locked' attribute to TRUE, so users won't be
            // able to change the machine name of our content type.
            'locked' => TRUE,
        ),
    );
} */

/**
 * function pcpm
 * 
 * a wrapper for the devel module dpm function
 */
function pcpm($value) {
  if (module_exists('devel')) {
    dpm($value);
  }
}

